{
   // Use IntelliSense to learn about possible attributes.
   // Hover to view descriptions of existing attributes.
   // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
   "version": "0.2.0",
   "configurations": [
      {
         "name": "Python: Current File",
         "type": "python",
         "request": "launch",
         "program": "${file}",
         "console": "integratedTerminal"
      },
      {
         "name": "Python: Test Memory",
         "type": "python",
         "request": "launch",
         "program": "${workspaceFolder}/.tmp/test_memory.py",
         "console": "integratedTerminal"
      },
      {
         "name": "Python: Run Network Generator",
         "type": "python",
         "request": "launch",
         "program": "${workspaceFolder}/.tmp/kafka-producer/main.py",
         "console": "integratedTerminal",
         "cwd": "${workspaceFolder}/.tmp/kafka-producer",
         "args": [
            "-m",
            "produce",
            "-n",
            "./network",
            "-i",
            "/home/mdemoret/Repos/rapids/cyber-dev/.tmp/dataset4/pcap_dump_pre_class.json",
            "-j",
            "1200",
            "-t",
            "test_pcap"
         ],
         "env": {
            "KAFKA_BROKER_SERVERS": "172.17.0.1:49161,172.17.0.1:49160,172.17.0.1:49159",
         }
      },
      {
         "name": "Python: Onnx-To-TRT",
         "type": "python",
         "request": "launch",
         "program": "${workspaceFolder}/morpheus/cli.py",
         "console": "integratedTerminal",
         "justMyCode": false,
         "cwd": "${workspaceFolder}",
         // "env": {
         //    "CLX_INFERENCE_PIPELINE": "pytorch",
         //    "CLX_VOCAB_HASH_FILE": "bert-base-cased-hash.txt",
         //    "CLX_MODEL_SEQ_LENGTH": "512",
         //    "CLX_MODEL_MAX_BATCH_SIZE": "18",
         // },
         "args": [
            "onnx-to-trt",
            // "--help"
            "--input_model=.tmp/models_onnx/mini_bert_128seq.onnx",
            "--output_model=.tmp/models_onnx/mini_bert_128seq_b1-8_b1-16.engine",
            "--batches",
            "1",
            "8",
            "--batches",
            "1",
            "16",
            "--seq_length=128"
         ]
      },
      {
         "name": "Python: Run Pipeline (NLP)",
         "type": "python",
         "request": "launch",
         "program": "${workspaceFolder}/morpheus/cli.py",
         "console": "integratedTerminal",
         "justMyCode": false,
         "subProcess": true,
         "cwd": "${workspaceFolder}",
         "env": {
            // "PYTHONASYNCIODEBUG": "1",
         },
         // "argsExpansion": "none",
         "args": [
            "--log_level=DEBUG",
            "--debug",
            "run",
            "--num_threads=8",
            "--pipeline_batch_size=1024",
            "--model_max_batch_size=32",
            // "dask",
            "pipeline",
            "--model_seq_length=256",
            "--model_vocab_hash_file=./data/bert-base-cased-hash.txt",
            "from-file",
            "--filename=data/pcap_dump.jsonlines",
            // "from-kafka",
            // "monitor",
            // "--description",
            // "Input Message Rate",
            "buffer",
            "deserialize",
            // "buffer",
            // "monitor",
            // "--description",
            // "Post Deserialization",
            // "--smoothing=0.001",
            // "--unit",
            // "inf",
            // "trigger",
            "preprocess",
            // "monitor",
            // "--description",
            // "Post Preprocess",
            // "--smoothing=0.001",
            // "--unit",
            // "inf",
            // "delay",
            // "--duration=10sec",
            // "trigger",
            "buffer",
            // "inf-identity",
            "inf-triton",
            "--model_name=sid-bert-onnx",
            "--server_url=localhost:8001",
            "monitor",
            "--description",
            "Inference Rate",
            "--smoothing=0.001",
            "--unit",
            "inf",
            // "add-class",
            // "filter",
            // "serialize",
            // "--include",
            // "timestamp",
            // "--exclude",
            // "^ts_",
            // "to-kafka",
            // "--output_topic",
            // "inference_output",
            // "to-file",
            // "--filename=./.tmp/detections.json",
            // "--overwrite",
            // "--help",
         ]
      },
      {
         "name": "Python: Run Pipeline (FIL)",
         "type": "python",
         "request": "launch",
         "program": "${workspaceFolder}/morpheus/cli.py",
         "console": "integratedTerminal",
         "justMyCode": false,
         "subProcess": true,
         "cwd": "${workspaceFolder}",
         "env": {
            // "PYTHONASYNCIODEBUG": "1",
         },
         // "argsExpansion": "none",
         "args": [
            "run",
            "--num_threads=8",
            "--pipeline_batch_size=1024",
            "--model_max_batch_size=1024",
            // "dask",
            "pipeline-fil",
            "from-file",
            "--filename=./data/nvsmi.jsonlines",
            // "from-kafka",
            // "monitor",
            // "--description",
            // "Input Message Rate",
            "buffer",
            "deserialize",
            "buffer",
            "--count=8",
            // "monitor",
            // "--description",
            // "Post Deserialization",
            // "--smoothing=0.001",
            // "--unit",
            // "inf",
            // "trigger",
            "preprocess",
            // "monitor",
            // "--description",
            // "Post Preprocess",
            // "--smoothing=0.001",
            // "--unit",
            // "inf",
            // "delay",
            // "--duration=10sec",
            // "trigger",
            "buffer",
            "--count=8",
            // "inf-identity",
            "inf-triton",
            "--model_name=abp-nvsmi-xgb",
            "--server_url=localhost:8001",
            "monitor",
            "--description",
            "Inference Rate",
            "--smoothing=0.001",
            "--unit",
            "inf",
            // "add-class",
            // "filter",
            // "serialize",
            // "--include",
            // "timestamp",
            // "--exclude",
            // "^ts_",
            // "to-kafka",
            // "--output_topic",
            // "inference_output",
            // "to-file",
            // "--filename=./.tmp/detections.json",
            // "--overwrite",
            // "--help",
         ]
      },
      {
         "name": "Python: MIMO Example",
         "type": "python",
         "request": "launch",
         "program": "${workspaceFolder}/examples/multi_in_multi_out/run.py",
         "console": "integratedTerminal",
         "justMyCode": false,
         "cwd": "${workspaceFolder}",
      },
      {
         "name": "Python: Anomaly Detection Example",
         "type": "python",
         "request": "launch",
         "program": "${workspaceFolder}/examples/anomaly_detection/run.py",
         "console": "integratedTerminal",
         "cwd": "${workspaceFolder}/examples/anomaly_detection",
         "justMyCode": false,
         "args": [
            "--input_file",
            "./pcap.jsonlines",
            "--output_file",
            "./pcap_output.jsonlines",
            "--server_url",
            "localhost:8001",
         ]
      },
      {
         "name": "Python: Sphinx",
         "type": "python",
         "request": "launch",
         "module": "sphinx.cmd.build",
         "console": "integratedTerminal",
         "cwd": "${workspaceFolder}/docs",
         "args": [
            "-b",
            "html",
            "-aE",
            "source",
            "build",
         ],
         "justMyCode": false
      },
   ]
}